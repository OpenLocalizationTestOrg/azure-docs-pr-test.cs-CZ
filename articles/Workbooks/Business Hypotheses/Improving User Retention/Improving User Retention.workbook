<span data-ttu-id="eb30e-101">{"$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json", "verze": "Poznámkového bloku nebo 1.0", "položky": [{"typ": 1, "obsah": {"json": "# předpoklad - _[navrhované změny]_ zlepší uchování uživatele pomocí _[očekává zlepšování]_ \ n---dobrý předpoklad \nA jsou srdcem řízené daty rozhodování.</span><span class="sxs-lookup"><span data-stu-id="eb30e-101">{ "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json", "version": "Notebook/1.0", "items": [ { "type": 1, "content": { "json": "# Hypothesis - _[proposed change]_ will improve user retention by _[expected improvement]_ \n---\nA good hypothesis is the heart of data-driven decision making.</span></span> <span data-ttu-id="eb30e-102">Hypotézy mohou uživatelé změnit informace o využití vašich zákazníků vaší aplikace do řešitelné návrh pro vylepšení.</span><span class="sxs-lookup"><span data-stu-id="eb30e-102">Hypotheses help you turn information about your customers' usage of your app into actionable proposal for improvements.</span></span> <span data-ttu-id="eb30e-103">Pomocí tohoto sešitu vytvořit předpoklad týkající se vylepšení míru uchování uživatelů."</span><span class="sxs-lookup"><span data-stu-id="eb30e-103">Use this workbook to craft a hypothesis about improving the retention rates of your users."</span></span>
<span data-ttu-id="eb30e-104">}}, {"typ": 1, "obsah": {"json": "## problém - _[formulace problému]_ \nAdd souhrn problému v oddílu.</span><span class="sxs-lookup"><span data-stu-id="eb30e-104">} }, { "type": 1, "content": { "json": "## Problem - _[problem statement]_ \nAdd a summary of the problem in the section.</span></span> <span data-ttu-id="eb30e-105">Souhrn by měl být stručným a více než několik věty dlouho.</span><span class="sxs-lookup"><span data-stu-id="eb30e-105">The summary should be concise and not more than a few sentences long.</span></span> <span data-ttu-id="eb30e-106">Jasně stavu problému a vyhnout se nepotřebných podrobnosti.</span><span class="sxs-lookup"><span data-stu-id="eb30e-106">Clearly state the problem and avoid nonessential details.</span></span> <span data-ttu-id="eb30e-107">\n\n\n"}}, {"typ": 1,"obsah": {"json":" ### co je problém uchování? \nModify zobrazíte míru uchování aktivity analýze níže uvedených parametrů.</span><span class="sxs-lookup"><span data-stu-id="eb30e-107">\n\n\n" } }, { "type": 1, "content": { "json": "### What's the retention problem?\nModify the parameters below to show the retention rate of activities you are analyzing.</span></span> <span data-ttu-id="eb30e-108">Vaším cílem by měl být zvýraznění problém uchovávání informací ve vaší aplikaci."</span><span class="sxs-lookup"><span data-stu-id="eb30e-108">Your goal should be highlighting a retention problem in your app."</span></span>
<span data-ttu-id="eb30e-109">} }, { "type": 9, "content": { "version": "KqlParameterItem/1.0", "query": "", "crossComponentResources": [], "parameters": [ { "id": "e552c6ce-183d-4b5d-8405-d60313b3eb8e", "version": "KqlParameterItem/1.0", "name": "Activities", "type": 2, "description": "", "isRequired": true, "multiSelect": true, "quote": "'", "delimiter": ",", "query": "union customEvents, pageViews\r\n| where timestamp >= ago(7d)\r\n| summarize count() by name\r\n| order by count_ desc\r\n| project Id=name, Title=name, Selected=false\r\n| union (\r\ndatatable(Id:string, Title:string, Selected:boolean)[\r\n'*', 'All Events and Page Views', true\r\n]\r\n)" }, { "id": "68b8c1f5-9f24-401a-bea4-9739a7438069", "version": "KqlParameterItem/1.0", "name": "RetentionPeriod", "type": 2, "description": null, "isRequired": true, "multiSelect": null, "query": "datatable(key:string, display:string) \r\n[ \r\n\"1d\", \"Day over Day\", \r\n\"7d\", \"Week over Week\", \r\n\"28d\", \"Month over Month (28 days)\", \r\n\"30d\", \"Month over Month (30 days)\"\r\n] ", "value": "28d" }, { "id": "7813b809-0b92-4531-ad05-90add0674de0", "version": "KqlParameterItem/1.0", "name": "TimeRange", "type": 2, "description": null, "isRequired": true, "multiSelect": null, "query": "datatable(key:string, display:string) \r\n[ \r\n\"7d\", \"Last 7 days\", \r\n\"14d\", \"Last 14 days\", \r\n\"30d\", \"Last 30 days\", \r\n] ", "value": "30d" } ] } }, { "type": 3, "content": { "version": "KqlItem/1.0", "query": "let timeRange = {TimeRange};\r\nlet monthDefinition = {RetentionPeriod};\r\nlet hlls = union customEvents, pageViews\r\n| where timestamp >= startofmonth(now() - timeRange - 2 * monthDefinition)\r\n| where name in ({Activities}) or '*' in ({Activities})\r\n| summarize Hlls = hll(user_Id) by bin(timestamp, 1d)\r\n| project DaysToMerge = timestamp, Hlls;\r\nlet churnSeriesWithHllsToInclude = materialize(range d from 0d to (timeRange) step 1d\r\n| extend Day = startofday(now() - d)\r\n| extend R = range(0d, monthDefinition - 1d, 1d)\r\n| mvexpand R\r\n| extend ThisMonth = Day - totimespan(R)\r\n| extend LastMonth = Day - monthDefinition - totimespan(R)\r\n| project Day, ThisMonth, LastMonth);\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = ThisMonth\r\n| join kind= inner (hlls) on DaysToMerge \r\n| project Day, ThisMonthHlls = Hlls\r\n| union (\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = LastMonth\r\n| join kind= inner (hlls) on DaysToMerge\r\n| project Day, LastMonthHlls = Hlls)\r\n| summarize ThisMonth = hll_merge(ThisMonthHlls), LastMonth = hll_merge(LastMonthHlls) by Day\r\n| evaluate dcount_intersect(ThisMonth, LastMonth)\r\n| where Day >= startofday(now() - timeRange)\r\n| extend ChurnedUsers = (dcount_hll(LastMonth) - s1) // Last Months Users - Returning Users\r\n| project Day, [\"Retention Rate\"] = iff((s1 + ChurnedUsers) == 0, 0.0, 100.0 * s1 / (s1 + ChurnedUsers))\r\n", "showQuery": false, "size": 0, "aggregation": 5, "showAnnotations": false, "visualization": "timechart" } }, { "type": 1, "content": { "json": "### As a benchmark, what's the retention rate of a similar feature?\nUse this section to compare the retention of your activities with similar ones.</span><span class="sxs-lookup"><span data-stu-id="eb30e-109">} }, { "type": 9, "content": { "version": "KqlParameterItem/1.0", "query": "", "crossComponentResources": [], "parameters": [ { "id": "e552c6ce-183d-4b5d-8405-d60313b3eb8e", "version": "KqlParameterItem/1.0", "name": "Activities", "type": 2, "description": "", "isRequired": true, "multiSelect": true, "quote": "'", "delimiter": ",", "query": "union customEvents, pageViews\r\n| where timestamp >= ago(7d)\r\n| summarize count() by name\r\n| order by count_ desc\r\n| project Id=name, Title=name, Selected=false\r\n| union (\r\ndatatable(Id:string, Title:string, Selected:boolean)[\r\n'*', 'All Events and Page Views', true\r\n]\r\n)" }, { "id": "68b8c1f5-9f24-401a-bea4-9739a7438069", "version": "KqlParameterItem/1.0", "name": "RetentionPeriod", "type": 2, "description": null, "isRequired": true, "multiSelect": null, "query": "datatable(key:string, display:string) \r\n[ \r\n\"1d\", \"Day over Day\", \r\n\"7d\", \"Week over Week\", \r\n\"28d\", \"Month over Month (28 days)\", \r\n\"30d\", \"Month over Month (30 days)\"\r\n] ", "value": "28d" }, { "id": "7813b809-0b92-4531-ad05-90add0674de0", "version": "KqlParameterItem/1.0", "name": "TimeRange", "type": 2, "description": null, "isRequired": true, "multiSelect": null, "query": "datatable(key:string, display:string) \r\n[ \r\n\"7d\", \"Last 7 days\", \r\n\"14d\", \"Last 14 days\", \r\n\"30d\", \"Last 30 days\", \r\n] ", "value": "30d" } ] } }, { "type": 3, "content": { "version": "KqlItem/1.0", "query": "let timeRange = {TimeRange};\r\nlet monthDefinition = {RetentionPeriod};\r\nlet hlls = union customEvents, pageViews\r\n| where timestamp >= startofmonth(now() - timeRange - 2 * monthDefinition)\r\n| where name in ({Activities}) or '*' in ({Activities})\r\n| summarize Hlls = hll(user_Id) by bin(timestamp, 1d)\r\n| project DaysToMerge = timestamp, Hlls;\r\nlet churnSeriesWithHllsToInclude = materialize(range d from 0d to (timeRange) step 1d\r\n| extend Day = startofday(now() - d)\r\n| extend R = range(0d, monthDefinition - 1d, 1d)\r\n| mvexpand R\r\n| extend ThisMonth = Day - totimespan(R)\r\n| extend LastMonth = Day - monthDefinition - totimespan(R)\r\n| project Day, ThisMonth, LastMonth);\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = ThisMonth\r\n| join kind= inner (hlls) on DaysToMerge \r\n| project Day, ThisMonthHlls = Hlls\r\n| union (\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = LastMonth\r\n| join kind= inner (hlls) on DaysToMerge\r\n| project Day, LastMonthHlls = Hlls)\r\n| summarize ThisMonth = hll_merge(ThisMonthHlls), LastMonth = hll_merge(LastMonthHlls) by Day\r\n| evaluate dcount_intersect(ThisMonth, LastMonth)\r\n| where Day >= startofday(now() - timeRange)\r\n| extend ChurnedUsers = (dcount_hll(LastMonth) - s1) // Last Months Users - Returning Users\r\n| project Day, [\"Retention Rate\"] = iff((s1 + ChurnedUsers) == 0, 0.0, 100.0 * s1 / (s1 + ChurnedUsers))\r\n", "showQuery": false, "size": 0, "aggregation": 5, "showAnnotations": false, "visualization": "timechart" } }, { "type": 1, "content": { "json": "### As a benchmark, what's the retention rate of a similar feature?\nUse this section to compare the retention of your activities with similar ones.</span></span> <span data-ttu-id="eb30e-110">To vám pomůže nastavit kontext vylepšení, které se pokoušíte provést."</span><span class="sxs-lookup"><span data-stu-id="eb30e-110">This will help set the context of the improvements you are trying to make."</span></span>
<span data-ttu-id="eb30e-111">} }, { "type": 9, "content": { "version": "KqlParameterItem/1.0", "query": "", "crossComponentResources": [], "parameters": [ { "id": "35df6f18-6009-4c8c-898a-3d47414ee7cd", "version": "KqlParameterItem/1.0", "name": "RelatedActivities", "type": 2, "description": "", "isRequired": true, "multiSelect": true, "quote": "'", "delimiter": ",", "query": "union customEvents, pageViews\r\n| where timestamp >= ago(7d)\r\n| summarize count() by name\r\n| order by count_ desc\r\n| project Id=name, Title=name, Selected=false\r\n| union (\r\ndatatable(Id:string, Title:string, Selected:boolean)[\r\n'*', 'All Events and Page Views', true\r\n]\r\n)" } ] } }, { "type": 3, "content": { "version": "KqlItem/1.0", "query": "let timeRange = {TimeRange};\r\nlet monthDefinition = {RetentionPeriod};\r\nlet hlls = union customEvents, pageViews\r\n| where timestamp >= startofmonth(now() - timeRange - 2 * monthDefinition)\r\n| where name in ({RelatedActivities}) or '*' in ({RelatedActivities})\r\n| summarize Hlls = hll(user_Id) by bin(timestamp, 1d)\r\n| project DaysToMerge = timestamp, Hlls;\r\nlet churnSeriesWithHllsToInclude = materialize(range d from 0d to (timeRange) step 1d\r\n| extend Day = startofday(now() - d)\r\n| extend R = range(0d, monthDefinition - 1d, 1d)\r\n| mvexpand R\r\n| extend ThisMonth = Day - totimespan(R)\r\n| extend LastMonth = Day - monthDefinition - totimespan(R)\r\n| project Day, ThisMonth, LastMonth);\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = ThisMonth\r\n| join kind= inner (hlls) on DaysToMerge \r\n| project Day, ThisMonthHlls = Hlls\r\n| union (\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = LastMonth\r\n| join kind= inner (hlls) on DaysToMerge\r\n| project Day, LastMonthHlls = Hlls)\r\n| summarize ThisMonth = hll_merge(ThisMonthHlls), LastMonth = hll_merge(LastMonthHlls) by Day\r\n| evaluate dcount_intersect(ThisMonth, LastMonth)\r\n| where Day >= startofday(now() - timeRange)\r\n| extend ChurnedUsers = (dcount_hll(LastMonth) - s1) // Last Months Users - Returning Users\r\n| project Day, [\"Retention Rate\"] = iff((s1 + ChurnedUsers) == 0, 0.0, 100.0 * s1 / (s1 + ChurnedUsers))\r\n", "showQuery": false, "size": 0, "aggregation": 5, "showAnnotations": false, "visualization": "timechart" } }, { "type": 1, "content": { "json": "### Why do we suspect retention for this feature is low?\nThis section provides explanations for why the retention could be low.</span><span class="sxs-lookup"><span data-stu-id="eb30e-111">} }, { "type": 9, "content": { "version": "KqlParameterItem/1.0", "query": "", "crossComponentResources": [], "parameters": [ { "id": "35df6f18-6009-4c8c-898a-3d47414ee7cd", "version": "KqlParameterItem/1.0", "name": "RelatedActivities", "type": 2, "description": "", "isRequired": true, "multiSelect": true, "quote": "'", "delimiter": ",", "query": "union customEvents, pageViews\r\n| where timestamp >= ago(7d)\r\n| summarize count() by name\r\n| order by count_ desc\r\n| project Id=name, Title=name, Selected=false\r\n| union (\r\ndatatable(Id:string, Title:string, Selected:boolean)[\r\n'*', 'All Events and Page Views', true\r\n]\r\n)" } ] } }, { "type": 3, "content": { "version": "KqlItem/1.0", "query": "let timeRange = {TimeRange};\r\nlet monthDefinition = {RetentionPeriod};\r\nlet hlls = union customEvents, pageViews\r\n| where timestamp >= startofmonth(now() - timeRange - 2 * monthDefinition)\r\n| where name in ({RelatedActivities}) or '*' in ({RelatedActivities})\r\n| summarize Hlls = hll(user_Id) by bin(timestamp, 1d)\r\n| project DaysToMerge = timestamp, Hlls;\r\nlet churnSeriesWithHllsToInclude = materialize(range d from 0d to (timeRange) step 1d\r\n| extend Day = startofday(now() - d)\r\n| extend R = range(0d, monthDefinition - 1d, 1d)\r\n| mvexpand R\r\n| extend ThisMonth = Day - totimespan(R)\r\n| extend LastMonth = Day - monthDefinition - totimespan(R)\r\n| project Day, ThisMonth, LastMonth);\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = ThisMonth\r\n| join kind= inner (hlls) on DaysToMerge \r\n| project Day, ThisMonthHlls = Hlls\r\n| union (\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = LastMonth\r\n| join kind= inner (hlls) on DaysToMerge\r\n| project Day, LastMonthHlls = Hlls)\r\n| summarize ThisMonth = hll_merge(ThisMonthHlls), LastMonth = hll_merge(LastMonthHlls) by Day\r\n| evaluate dcount_intersect(ThisMonth, LastMonth)\r\n| where Day >= startofday(now() - timeRange)\r\n| extend ChurnedUsers = (dcount_hll(LastMonth) - s1) // Last Months Users - Returning Users\r\n| project Day, [\"Retention Rate\"] = iff((s1 + ChurnedUsers) == 0, 0.0, 100.0 * s1 / (s1 + ChurnedUsers))\r\n", "showQuery": false, "size": 0, "aggregation": 5, "showAnnotations": false, "visualization": "timechart" } }, { "type": 1, "content": { "json": "### Why do we suspect retention for this feature is low?\nThis section provides explanations for why the retention could be low.</span></span> <span data-ttu-id="eb30e-112">Řešení, které můžete navrhnout vyřeší některé nebo všechny problémy zjištěné v tomto poli."</span><span class="sxs-lookup"><span data-stu-id="eb30e-112">The solution you propose will address some or all of the issues identified here."</span></span>
<span data-ttu-id="eb30e-113">}}, {"typ": 1, "obsah": {"json": "### co je potenciální výhody pro vaši firmu, pokud zlepšení uchování pro tuto funkci? \nThis část vám pomůže pochopit vylepšení v měsíční aktivní uživatelé se zobrazí, pokud vaše uchování zvyšuje.</span><span class="sxs-lookup"><span data-stu-id="eb30e-113">} }, { "type": 1, "content": { "json": "### What's the potential benefit to your business if you improve retention for this feature?\nThis section helps you understand the improvements in monthly active users you can see if your retention increased.</span></span> <span data-ttu-id="eb30e-114">Použití _RetentionGoal_ parametr k nastavení cílem pro uchování navrhované řešení. "</span><span class="sxs-lookup"><span data-stu-id="eb30e-114">Use the _RetentionGoal_ parameter to set the goal for retention with the proposed solution."</span></span>
<span data-ttu-id="eb30e-115">} }, { "type": 9, "content": { "version": "KqlParameterItem/1.0", "query": "", "crossComponentResources": [], "parameters": [ { "id": "5d3b9f2b-ae31-41c1-a9c3-b540185fa7de", "version": "KqlParameterItem/1.0", "name": "RetentionGoal", "type": 1, "description": "The goal for Retention Rate expressed as percentage (0-100)", "isRequired": true, "query": "let timeRange = {TimeRange};\r\nlet monthDefinition = {RetentionPeriod};\r\nlet hlls = union customEvents, pageViews\r\n| where timestamp >= startofmonth(now() - timeRange - 2 * monthDefinition)\r\n| where name in ({Activities}) or '*' in ({Activities})\r\n| summarize Hlls = hll(user_Id) by bin(timestamp, 1d)\r\n| project DaysToMerge = timestamp, Hlls;\r\nlet churnSeriesWithHllsToInclude = materialize(range d from 0d to 0d step 1d\r\n| extend Day = startofday(now() - d)\r\n| extend R = range(0d, monthDefinition - 1d, 1d)\r\n| mvexpand R\r\n| extend ThisMonth = Day - totimespan(R)\r\n| extend LastMonth = Day - monthDefinition - totimespan(R)\r\n| project Day, ThisMonth, LastMonth);\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = ThisMonth\r\n| join kind= inner (hlls) on DaysToMerge \r\n| project Day, ThisMonthHlls = Hlls\r\n| union (\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = LastMonth\r\n| join kind= inner (hlls) on DaysToMerge\r\n| project Day, LastMonthHlls = Hlls)\r\n| summarize ThisMonth = hll_merge(ThisMonthHlls), LastMonth = hll_merge(LastMonthHlls) by Day\r\n| evaluate dcount_intersect(ThisMonth, LastMonth)\r\n| where Day >= startofday(now() - timeRange)\r\n| extend ChurnedUsers = (dcount_hll(LastMonth) - s1) // Last Months Users - Returning Users\r\n| project Retention = round(iff((s1 + ChurnedUsers) == 0, 0.0, 100.0 * s1 / (s1 + ChurnedUsers)) * 1.1, 1)\r\n| extend Retention = iff(Retention > 100, 100.0, Retention)\r\n" } ] } }, { "type": 3, "content": { "version": "KqlItem/1.0", "query": "let retentionRate = {RetentionGoal};\r\nlet timeRange = {TimeRange};\r\nlet monthDefinition = {RetentionPeriod};\r\nlet hlls = union customEvents, pageViews\r\n| where timestamp >= startofmonth(now() - timeRange - 2 * monthDefinition)\r\n| where name in ({Activities}) or '*' in ({Activities})\r\n| summarize Hlls = hll(user_Id) by bin(timestamp, 1d)\r\n| project DaysToMerge = timestamp, Hlls;\r\nlet churnSeriesWithHllsToInclude = materialize(range d from 0d to (timeRange) step 1d\r\n| extend Day = startofday(now() - d)\r\n| extend R = range(0d, monthDefinition - 1d, 1d)\r\n| mvexpand R\r\n| extend ThisMonth = Day - totimespan(R)\r\n| extend LastMonth = Day - monthDefinition - totimespan(R)\r\n| project Day, ThisMonth, LastMonth);\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = ThisMonth\r\n| join kind= inner (hlls) on DaysToMerge \r\n| project Day, ThisMonthHlls = Hlls\r\n| union (\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = LastMonth\r\n| join kind= inner (hlls) on DaysToMerge\r\n| project Day, LastMonthHlls = Hlls)\r\n| summarize ThisMonth = hll_merge(ThisMonthHlls), LastMonth = hll_merge(LastMonthHlls) by Day\r\n| evaluate dcount_intersect(ThisMonth, LastMonth)\r\n| where Day >= startofday(now() - timeRange)\r\n| extend NewUsers = s0 - s1\r\n| extend ChurnedUsers = (dcount_hll(LastMonth) - s1) // Last Months Users - Returning Users\r\n| project Day, [\"MAU at {RetentionGoal}% Retention\"] = (0.01 * retentionRate * s0) + NewUsers, [\"MAU\"] = s1 + NewUsers", "showQuery": false, "size": 0, "aggregation": 5, "showAnnotations": false, "visualization": "timechart" } }, { "type": 1, "content": { "json": "### What customer evidence do you have?\nAdd customer feedback that confirms that the existence of the problem and that your proposed solution will truly address it."</span><span class="sxs-lookup"><span data-stu-id="eb30e-115">} }, { "type": 9, "content": { "version": "KqlParameterItem/1.0", "query": "", "crossComponentResources": [], "parameters": [ { "id": "5d3b9f2b-ae31-41c1-a9c3-b540185fa7de", "version": "KqlParameterItem/1.0", "name": "RetentionGoal", "type": 1, "description": "The goal for Retention Rate expressed as percentage (0-100)", "isRequired": true, "query": "let timeRange = {TimeRange};\r\nlet monthDefinition = {RetentionPeriod};\r\nlet hlls = union customEvents, pageViews\r\n| where timestamp >= startofmonth(now() - timeRange - 2 * monthDefinition)\r\n| where name in ({Activities}) or '*' in ({Activities})\r\n| summarize Hlls = hll(user_Id) by bin(timestamp, 1d)\r\n| project DaysToMerge = timestamp, Hlls;\r\nlet churnSeriesWithHllsToInclude = materialize(range d from 0d to 0d step 1d\r\n| extend Day = startofday(now() - d)\r\n| extend R = range(0d, monthDefinition - 1d, 1d)\r\n| mvexpand R\r\n| extend ThisMonth = Day - totimespan(R)\r\n| extend LastMonth = Day - monthDefinition - totimespan(R)\r\n| project Day, ThisMonth, LastMonth);\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = ThisMonth\r\n| join kind= inner (hlls) on DaysToMerge \r\n| project Day, ThisMonthHlls = Hlls\r\n| union (\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = LastMonth\r\n| join kind= inner (hlls) on DaysToMerge\r\n| project Day, LastMonthHlls = Hlls)\r\n| summarize ThisMonth = hll_merge(ThisMonthHlls), LastMonth = hll_merge(LastMonthHlls) by Day\r\n| evaluate dcount_intersect(ThisMonth, LastMonth)\r\n| where Day >= startofday(now() - timeRange)\r\n| extend ChurnedUsers = (dcount_hll(LastMonth) - s1) // Last Months Users - Returning Users\r\n| project Retention = round(iff((s1 + ChurnedUsers) == 0, 0.0, 100.0 * s1 / (s1 + ChurnedUsers)) * 1.1, 1)\r\n| extend Retention = iff(Retention > 100, 100.0, Retention)\r\n" } ] } }, { "type": 3, "content": { "version": "KqlItem/1.0", "query": "let retentionRate = {RetentionGoal};\r\nlet timeRange = {TimeRange};\r\nlet monthDefinition = {RetentionPeriod};\r\nlet hlls = union customEvents, pageViews\r\n| where timestamp >= startofmonth(now() - timeRange - 2 * monthDefinition)\r\n| where name in ({Activities}) or '*' in ({Activities})\r\n| summarize Hlls = hll(user_Id) by bin(timestamp, 1d)\r\n| project DaysToMerge = timestamp, Hlls;\r\nlet churnSeriesWithHllsToInclude = materialize(range d from 0d to (timeRange) step 1d\r\n| extend Day = startofday(now() - d)\r\n| extend R = range(0d, monthDefinition - 1d, 1d)\r\n| mvexpand R\r\n| extend ThisMonth = Day - totimespan(R)\r\n| extend LastMonth = Day - monthDefinition - totimespan(R)\r\n| project Day, ThisMonth, LastMonth);\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = ThisMonth\r\n| join kind= inner (hlls) on DaysToMerge \r\n| project Day, ThisMonthHlls = Hlls\r\n| union (\r\nchurnSeriesWithHllsToInclude\r\n| extend DaysToMerge = LastMonth\r\n| join kind= inner (hlls) on DaysToMerge\r\n| project Day, LastMonthHlls = Hlls)\r\n| summarize ThisMonth = hll_merge(ThisMonthHlls), LastMonth = hll_merge(LastMonthHlls) by Day\r\n| evaluate dcount_intersect(ThisMonth, LastMonth)\r\n| where Day >= startofday(now() - timeRange)\r\n| extend NewUsers = s0 - s1\r\n| extend ChurnedUsers = (dcount_hll(LastMonth) - s1) // Last Months Users - Returning Users\r\n| project Day, [\"MAU at {RetentionGoal}% Retention\"] = (0.01 * retentionRate * s0) + NewUsers, [\"MAU\"] = s1 + NewUsers", "showQuery": false, "size": 0, "aggregation": 5, "showAnnotations": false, "visualization": "timechart" } }, { "type": 1, "content": { "json": "### What customer evidence do you have?\nAdd customer feedback that confirms that the existence of the problem and that your proposed solution will truly address it."</span></span>
<span data-ttu-id="eb30e-116">}}, {"typ": 1, "obsah": {"json": "### jak jsou konkurence řešení tohoto problému? \nUse v této části ukazují, jak konkurence řešení tohoto problému v jejich apps.\n"}}, {"typ": 1, "obsah": {"json": "### otevřete Questions\nList všechny otázky nebo diskuse, které jsou stále nerozpoznané."</span><span class="sxs-lookup"><span data-stu-id="eb30e-116">} }, { "type": 1, "content": { "json": "### How are your competitors solving this problem?\nUse this section to show how your competitors address this problem in their apps.\n" } }, { "type": 1, "content": { "json": "### Open Questions\nList all questions or discussions that are still unresolved."</span></span>
<span data-ttu-id="eb30e-117">}}, {"typ": 1, "obsah": {"json": "## možným řešením - _[řešení description]_ \nUse v této části popisují navrhované řešení. \n"}}, {"typ": 1, "obsah": {"json": "### proto bude fungovat? \nDescribe vaše teoreticky uživatele chování, které bude mít za následek tento návrh vede k větší uchování uživatele."</span><span class="sxs-lookup"><span data-stu-id="eb30e-117">} }, { "type": 1, "content": { "json": "## Potential solution - _[solution description]_ \nUse this section describe the proposed solution.\n" } }, { "type": 1, "content": { "json": "### Why it will work?\nDescribe your theory of user behavior that will result in this proposal leading to greater user retention."</span></span>
<span data-ttu-id="eb30e-118">}}, {"typ": 1, "obsah": {"json": "### Proč nefunguje? \nThink o a seznamu důvod, proč nemusí dojít k řešení ke splnění cílů jste nastavili – například alternativní teorií příčinu problému."</span><span class="sxs-lookup"><span data-stu-id="eb30e-118">} }, { "type": 1, "content": { "json": "### Why might it not work?\nThink about and list reason why the solution may not result in meeting the goals you have set - e.g. alternate theories for the cause of the problem."</span></span>
<span data-ttu-id="eb30e-119">}}, {"typ": 1, "obsah": {"json": "### ovlivní jiné scénáře? \nList další funkce a scénáře, které mohou být ovlivněna navrhované řešení.</span><span class="sxs-lookup"><span data-stu-id="eb30e-119">} }, { "type": 1, "content": { "json": "### Will it affect other scenarios?\nList the other features and scenarios that could be affected by the proposed solution.</span></span> <span data-ttu-id="eb30e-120">" } }, { "type": 1, "content": { "json": "## Expected outcome - User retention improves to {RetentionGoal}%\nThis section clearly lists out the measurable outcomes of implementing the proposed solution.\n\n" } }, { "type": 1, "content": { "json": "### Primary Goal - Retention Rate hits {RetentionGoal}%\n" } }, { "type": 3, "content": { "version": "KqlItem/1.0", "query": "let timeRange = {TimeRange};\nlet monthDefinition = {RetentionPeriod};\nlet hlls = union customEvents, pageViews\n| where timestamp >= startofmonth(now() - timeRange - 2 \* monthDefinition)\n| where name in ({Activities}) or '\*' in ({Activities})\n| summarize Hlls = hll(user_Id) by bin(timestamp, 1d)\n| project DaysToMerge = timestamp, Hlls;\nlet churnSeriesWithHllsToInclude = materialize(range d from 0d to (timeRange + monthDefinition) step 1d\n| extend Day = startofday(now() - d)\n| extend R = range(0d, monthDefinition - 1d, 1d)\n| mvexpand R\n| extend ThisMonth = Day - totimespan(R)\n| extend LastMonth = Day - monthDefinition - totimespan(R)\n| project Day, ThisMonth, LastMonth);\nchurnSeriesWithHllsToInclude\n| extend DaysToMerge = ThisMonth\n| join kind= inner (hlls) on DaysToMerge \n| project Day, ThisMonthHlls = Hlls\n| union (\nchurnSeriesWithHllsToInclude\n| extend DaysToMerge = LastMonth\n| join kind= inner (hlls) on DaysToMerge\n| project Day, LastMonthHlls = Hlls)\n| summarize ThisMonth = hll_merge(ThisMonthHlls), LastMonth = hll_merge(LastMonthHlls) by Day\n| evaluate dcount_intersect(ThisMonth, LastMonth)\n| where Day >= startofday(now() - timeRange)\n| extend ChurnedUsers = (dcount_hll(LastMonth) - s1) // Last Months Users - Returning Users\n| project Day, [\"Retention Rate\"] = iff((s1 + ChurnedUsers) == 0, 0.0, 100.0 \* s1 / (s1 + ChurnedUsers)), Goal = {RetentionGoal}\n", "showQuery": false, "size": 0, "aggregation": 5, "showAnnotations": false, "visualization": "timechart" } }, { "type": 1, "content": { "json": "### Other Goals\nList any secondary goals you may have related to this effort.</span><span class="sxs-lookup"><span data-stu-id="eb30e-120">" } }, { "type": 1, "content": { "json": "## Expected outcome - User retention improves to {RetentionGoal}%\nThis section clearly lists out the measurable outcomes of implementing the proposed solution.\n\n" } }, { "type": 1, "content": { "json": "### Primary Goal - Retention Rate hits {RetentionGoal}%\n" } }, { "type": 3, "content": { "version": "KqlItem/1.0", "query": "let timeRange = {TimeRange};\nlet monthDefinition = {RetentionPeriod};\nlet hlls = union customEvents, pageViews\n| where timestamp >= startofmonth(now() - timeRange - 2 \* monthDefinition)\n| where name in ({Activities}) or '\*' in ({Activities})\n| summarize Hlls = hll(user_Id) by bin(timestamp, 1d)\n| project DaysToMerge = timestamp, Hlls;\nlet churnSeriesWithHllsToInclude = materialize(range d from 0d to (timeRange + monthDefinition) step 1d\n| extend Day = startofday(now() - d)\n| extend R = range(0d, monthDefinition - 1d, 1d)\n| mvexpand R\n| extend ThisMonth = Day - totimespan(R)\n| extend LastMonth = Day - monthDefinition - totimespan(R)\n| project Day, ThisMonth, LastMonth);\nchurnSeriesWithHllsToInclude\n| extend DaysToMerge = ThisMonth\n| join kind= inner (hlls) on DaysToMerge \n| project Day, ThisMonthHlls = Hlls\n| union (\nchurnSeriesWithHllsToInclude\n| extend DaysToMerge = LastMonth\n| join kind= inner (hlls) on DaysToMerge\n| project Day, LastMonthHlls = Hlls)\n| summarize ThisMonth = hll_merge(ThisMonthHlls), LastMonth = hll_merge(LastMonthHlls) by Day\n| evaluate dcount_intersect(ThisMonth, LastMonth)\n| where Day >= startofday(now() - timeRange)\n| extend ChurnedUsers = (dcount_hll(LastMonth) - s1) // Last Months Users - Returning Users\n| project Day, [\"Retention Rate\"] = iff((s1 + ChurnedUsers) == 0, 0.0, 100.0 \* s1 / (s1 + ChurnedUsers)), Goal = {RetentionGoal}\n", "showQuery": false, "size": 0, "aggregation": 5, "showAnnotations": false, "visualization": "timechart" } }, { "type": 1, "content": { "json": "### Other Goals\nList any secondary goals you may have related to this effort.</span></span> <span data-ttu-id="eb30e-121">" } } ] }</span><span class="sxs-lookup"><span data-stu-id="eb30e-121">" } } ] }</span></span>